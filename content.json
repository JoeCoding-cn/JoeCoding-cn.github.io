{"pages":[{"title":"about","text":"一名练习时长两年半的Java练习生 技术栈: Java Golang Python Angular PHP","link":"/about/index.html"}],"posts":[{"title":"(一) Hexo + Icarus  搭建静态博客","text":"为什么要自建博客？(都是废话，可以跳过看下面的)在之前我记录一些笔记的时候用过CSDN，后面用过一段时间简书、印象笔记、有道云啥的都有用过，CSDN的排版个人感觉总是很别扭, 后面就想着自己给搭建一个博客。 现在网上非常多的开源博客 WordPress、Ghost、Halo、Hexo之类的，主要分为动态、静态两类。自己看了看案例对比最后选择了Hexo这个静态博客 ，以上博客有些啥区别可以自行百度了解 。 为什么选择Hexo？正如Hexo官网描述所说 快速、简洁且高效的博客框架 Hexo支持Markdown 平时自己写好md文件之后编译之后就成了html格式了 支持部署到GithubPages Hexo只需要一条指令就能发布到GitPage 我选择Hexo还有一个原因就是穷~ 买不起云服务器 咱们就利用Gitee或者是Github的Pages空间配合Hexo来搭建一个自己的博客! (一) 搭建Hexo所需环境确保电脑有安装 Node Npm Hexo是基于Node构建的，没有的自行安装 推荐最新稳定版. 安装之后最好修改一下Npm的国内镜像仓库。npm默认简直是龟速，有梯子的小伙伴当我没说 我这边使用的是淘宝仓库 本文所使用的版本 node:v12.18.1 npm:6.14.5 (二) 安装Hexo1.安装 打开终端 执行 npm install hexo-cli -g 全局安装Hexo. 2.创建博客 hexo init blog blog就是博客根目录 cd blog 进入博客目录 npm install 安装依赖 hexo server 或者 hexo s 启动服务 不出意外控制台会输出 123&gt; hexo serverINFO Start processingINFO Hexo is running at http://localhost:4000 . Press Ctrl+C to stop. 浏览器打开 http://localhost:4000 (三) 选择主题在blog初始化的时候hexo就默认下载了landscape主题，对比了很多款 我现在正在用的这款是icarus 也可以到hexo的主题列表里面自己选择https://hexo.io/themes/ 下载 进入博客根目录 cd blog git clone https://github.com/ppoffice/hexo-theme-icarus.git themes/icarus 下载完成之后需要修改配置在blog文件夹下 _config.yml文件 所有配置基本都在这里 找到theme: landscape 修改为theme: icarus 重启服务即可. 常见问题修改了主题之后执行 hexo server可能会有如下报错 这是因为icarus主题所需的依赖没有安装. 12345678910111213141516171819❯ hexo serverINFO ======================================= ██╗ ██████╗ █████╗ ██████╗ ██╗ ██╗███████╗ ██║██╔════╝██╔══██╗██╔══██╗██║ ██║██╔════╝ ██║██║ ███████║██████╔╝██║ ██║███████╗ ██║██║ ██╔══██║██╔══██╗██║ ██║╚════██║ ██║╚██████╗██║ ██║██║ ██║╚██████╔╝███████║ ╚═╝ ╚═════╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═════╝ ╚══════╝=============================================INFO === Checking package dependencies ===ERROR Package bulma-stylus is not installed.ERROR Package hexo-component-inferno is not installed.ERROR Package hexo-renderer-inferno is not installed.ERROR Package inferno is not installed.ERROR Package inferno-create-element is not installed.ERROR Please install the missing dependencies your Hexo site root directory:ERROR npm install --save bulma-stylus@0.8.0 hexo-component-inferno@^0.4.0 hexo-renderer-inferno@^0.1.3 inferno@^7.3.3 inferno-create-element@^7.3.3ERROR or:ERROR yarn add bulma-stylus@0.8.0 hexo-component-inferno@^0.4.0 hexo-renderer-inferno@^0.1.3 inferno@^7.3.3 inferno-create-element@^7.3.3 按照提示安装依赖 1npm install --save bulma-stylus@0.8.0 hexo-component-inferno@^0.4.0 hexo-renderer-inferno@^0.1.3 inferno@^7.3.3 inferno-create-element@^7.3.3 再次启动服务就ok了 (四) 开始写作hexo默认是使用的markdown，执行hexo new 文章名 默认会在./source/_posts/ 文件夹下创建 文章名.md文件 同理 也可以把自己已经写好的.md文件放到这个目录下 然后执行 hexo g &amp;&amp; hexo s 打开浏览器就能看到编译好的html了 1234567891011121314❯ hexo new testInferno is in development mode.INFO ======================================= ██╗ ██████╗ █████╗ ██████╗ ██╗ ██╗███████╗ ██║██╔════╝██╔══██╗██╔══██╗██║ ██║██╔════╝ ██║██║ ███████║██████╔╝██║ ██║███████╗ ██║██║ ██╔══██║██╔══██╗██║ ██║╚════██║ ██║╚██████╗██║ ██║██║ ██║╚██████╔╝███████║ ╚═╝ ╚═════╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═════╝ ╚══════╝=============================================INFO === Checking package dependencies ===INFO === Checking the configuration file ===INFO === Registering Hexo extensions ===INFO Created: ~/JoeSpace/Blogs/joejay/source/_posts/test.md (五) hexo常用命令123456789101112131415❯ hexo helpCommands: clean Remove generated files and cache. config Get or set configurations. deploy Deploy your website. generate Generate static files. help Get help on a command. init Create a new Hexo folder. list List the information of the site migrate Migrate your site from other system to Hexo. new Create a new post. publish Moves a draft post from _drafts to _posts folder. render Render files with renderer plugins. server Start the server. version Display version information. 经常使用到的就是 clean new server deploy 具体用法可以参考官方文档http://hexo.io/docs/ 官网也有中文","link":"/2020/06/29/(%E4%B8%80)%20Hexo%20+%20Icarus%20%20%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/"},{"title":"(三) 给你的博客添加看板娘(Live2D)HEXO+icarus","text":"版本icarus &lt; 3.0 HEXO+icarus主题 给博客添加看板娘(Live2D) 最近在很多博客左下角或者右下角有看到小人(看板娘)，折腾了一番搜到的都没有达到预期的效果，并且大多数教程都是基于Next来做的，本人使用的主题是Icarus，跟Next有细微的区别。后面找到了大神的作品，本次教程基于Hexo+Icarus添加的看板娘(Live2D) 参考博客 张书樵 梆子井欢喜坨 潘高 效果展示 教程1、把大神已修改好的代码托管在Github [源码](https://github.com/stevenjoezhang/live2d-widget) 下载到hexo目录下的`/themes/next/source`下下载好的文件名`live2d-widget` 2、进入`live2d-widget` 修改`autoload.js` 1234// 把这个替换掉const live2d_path = \"https://cdn.jsdelivr.net/gh/stevenjoezhang/live2d-widget/\";// 替换为const live2d_path = \"/live2d-widget/\"; 这个live2d_path是指刚才下载的源码存放的目录，在icarus中就会以hexo/theme/next/source 为根目录 ，刚才下载的源码放在这个位置所以这里的live2d_path 就是源码存放的位置 3、**重点** 不加会没有效果 在/themes/icarus/layout 中编辑 layout.ejs 加入以下依赖到&lt;head&gt;&lt;/head&gt;&gt;内 再次申明博主锁使用的是icarus 主题 如果是Next 主题则对应的文件是 /themes/next/layout/_layout.swig 123&lt;script src=\"https://cdn.jsdelivr.net/npm/jquery/dist/jquery.min.js\"&gt;&lt;/script&gt;&lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/font-awesome/css/font-awesome.min.css\"/&gt;&lt;script src=\"/live2d-widget/autoload.js\"&gt;&lt;/script&gt; 4、编辑主题的配置文件`_config.yml` 12live2d: enable: true 保存之后执行 `hexo clean &amp;&amp; hexo g &amp;&amp; hexo s` 查看效果大功告成想修改看板娘大小、位置、格式、文本内容等，可查看并修改live2d-widget 下的 &gt; waifu-tips.js 、 waifu-tips.json 、 waifu.css live2D模型地址：https://github.com/summerscar/live2dDemo live2D部分模型预览:https://huaji8.top/post/live2d-plugin-2.0/","link":"/2020/06/29/(%E4%B8%89)%20%E7%BB%99%E4%BD%A0%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E7%9C%8B%E6%9D%BF%E5%A8%98(Live2D)HEXO+icarus/"},{"title":"(二) icarus主题配置","text":"作者资料卡你可以启用作者资料卡挂件来展示文章作者/网站站长的信息。 资料卡的配置如下所示： 编辑icarus下_config.yml 1234567891011121314151617181920212223242526widgets: # Profile widget configurations - # Where should the widget be placed, left sidebar or right sidebar position: left type: profile # 作者名称 author: Joe # 作者头衔 # author_title: java-coding ## 作者所在地 location: 中国·深圳 # 头像图片地址 avatar: https://joe-1253912574.cos.ap-shenzhen-fsi.myqcloud.com/images/IMG_1292(20200629-005627).jpg # 是否显示圆形头像 avatar_rounded: true # Gravatar邮箱(如不设置`avatar`项) gravatar: joe-code@foxmail.com # 关注按钮链接地址 follow_link: 'https://gitee.com/joejay' # 社交媒体链接 social_links: Github: icon: fab fa-github url: 'https://github.com/ppoffice' 这个头像我设置之后也没生效… 一气之下直接写死了。在目录themes/icarus/layout/widget下有个profile.jsx 找到38行编辑图片src地址 1&lt;img class={'avatar' + (avatarRounded ? ' is-rounded' : '')} src='你的头像地址' alt={author} /&gt; 文章目录编辑icarus下_config.yml 默认开启 1234widgets: - type: toc position: left #展示位置 左或右 在需要显示目录的文章的.md开头插入 1234toc: true---文章内容... 友链编辑icarus下_config.yml 默认开启 12345678widgets: - position: left type: links # 友站名称与链接 links: LinkedBear: 'https://juejin.im/user/5d9c4a7b518825427b27645f' BugStack: 'https://bugstack.cn' 最新文章编辑icarus下_config.yml 默认开启 1234widgets: - position: right type: recent_posts 文章归档编辑icarus下_config.yml 默认开启 1234widgets: - position: right type: archives 文章分类编辑icarus下_config.yml 默认开启 1234widgets: - position: right type: categories 文章标签编辑icarus下_config.yml 默认开启 1234widgets: - position: right type: tags 在需要显示目录的文章的.md开头插入 1234567toc: truetags: - hexo - icarus - 博客---博客内容 国际化hexo支持国际化, icarus主题自带了多个语言 进入到blog目录下 /themes/icarus/languages 可以看到这里已经内置了中文简体 接下来修改配置文件_config.yml 需要注意的是 _config.yml 有两个 一个是hexo的 一个是icarus主题的 icarus的配置文件在 /themes/icarus/_config.yml 我们需要修改的是hexo的_config.yml 千万不能搞错了 修改languages为 zh-CN 繁体就是zh-TW咯上图文件夹下有的都可以配置 或者你也可以自定义国际化,随便打开一个yml照着改就行了","link":"/2020/06/29/(%E4%BA%8C)%20icarus%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/"},{"title":"Feign调用报错 feign.RetryableException: too many bytes written executing post","text":"SpringCloud Feign调用报错feign.RetryableException: too many bytes written executing版本: SpringCloud : Greenwich.SR5 SpringBoot : 2.1.9.RELEASE SpringCloudAlibaba : 2.1.0.RELEASE 看到这个错误第一时间我也是打开百度/Goole 但是搜出来的，无一例外 基本都是添加feign增强包 feign-httpclient 或者feign-okhttp 包; 无奈之下只好一步步debug 发现是把request.body 写入到流时发生的错误.java.io.IOException: insufficient data written 后面搜到body是跟Content-Length 有关系的… 附上博主链接 https://my.oschina.net/u/4410077/blog/3323588 看了之后 原来发生这个问题的原因跟我一样，因为服务之间调用需要携带一些用户信息之类的 所以实现了Feign的RequestInterceptor拦截器复制请求头，复制的时候是所有头都复制的,可能导致Content-length长度跟body不一致. 所以只需要判断如果是Content-length就跳过 原配置 : 1234567891011121314151617181920212223242526/** * @author Joe * createTime 2020/06/10 18:13 */@Log4j2@Configurationpublic class FeignConfiguration implements RequestInterceptor { @Override public void apply(RequestTemplate template) { ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder .getRequestAttributes(); HttpServletRequest request = attributes.getRequest(); Enumeration&lt;String&gt; headerNames = request.getHeaderNames(); if (headerNames != null) { while (headerNames.hasMoreElements()) { String name = headerNames.nextElement(); String values = request.getHeader(name); template.header(name, values); } } else { log.info(\"feign interceptor error header:{}\", template); } }} 修改之后: 123456789101112131415161718192021222324252627282930/** * @author Joe * createTime 2020/06/10 18:13 */@Log4j2@Configurationpublic class FeignConfiguration implements RequestInterceptor { @Override public void apply(RequestTemplate template) { ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder .getRequestAttributes(); HttpServletRequest request = attributes.getRequest(); Enumeration&lt;String&gt; headerNames = request.getHeaderNames(); if (headerNames != null) { while (headerNames.hasMoreElements()) { String name = headerNames.nextElement(); String values = request.getHeader(name); // 跳过 content-length if (name.equals(\"content-length\")){ continue; } template.header(name, values); } } else { log.info(\"feign interceptor error header:{}\", template); } }} content-length详解参考文章 ：https://juejin.im/post/5d772cb4e51d453b5f1a0502","link":"/2020/07/05/Feign%E8%B0%83%E7%94%A8%E6%8A%A5%E9%94%99%20feign.RetryableException:%20too%20many%20bytes%20written%20executing%20post/"}],"tags":[{"name":"Hexo","slug":"Hexo","link":"/tags/Hexo/"},{"name":"Icarus","slug":"Icarus","link":"/tags/Icarus/"},{"name":"博客","slug":"博客","link":"/tags/%E5%8D%9A%E5%AE%A2/"},{"name":"hexo","slug":"hexo","link":"/tags/hexo/"},{"name":"icarus","slug":"icarus","link":"/tags/icarus/"},{"name":"live2d","slug":"live2d","link":"/tags/live2d/"},{"name":"看板娘","slug":"看板娘","link":"/tags/%E7%9C%8B%E6%9D%BF%E5%A8%98/"},{"name":"国际化","slug":"国际化","link":"/tags/%E5%9B%BD%E9%99%85%E5%8C%96/"},{"name":"Feign","slug":"Feign","link":"/tags/Feign/"},{"name":"Java","slug":"Java","link":"/tags/Java/"},{"name":"SpringCloud","slug":"SpringCloud","link":"/tags/SpringCloud/"}],"categories":[{"name":"Hexo","slug":"Hexo","link":"/categories/Hexo/"},{"name":"Icarus","slug":"Hexo/Icarus","link":"/categories/Hexo/Icarus/"},{"name":"Java","slug":"Java","link":"/categories/Java/"},{"name":"SpringCloud","slug":"SpringCloud","link":"/categories/SpringCloud/"},{"name":"Feign","slug":"SpringCloud/Feign","link":"/categories/SpringCloud/Feign/"}]}